#include "LinAlgOps.h"
/*
float getScale(const Mat3f& M)
{
  float sx = length(M.cols[0]);
  float sy = length(M.cols[1]);
  float sz = length(M.cols[2]);
  auto t = sx > sy ? sx : sy;
  return sz > t ? sz : t;
}


BBox3f transform(const Mat3x4f& M, const BBox3f& bbox)
{
  Vec3f p[8] = {
    mul(M, Vec3f(bbox.min.x, bbox.min.y, bbox.min.z)),
    mul(M, Vec3f(bbox.min.x, bbox.min.y, bbox.max.z)),
    mul(M, Vec3f(bbox.min.x, bbox.max.y, bbox.min.z)),
    mul(M, Vec3f(bbox.min.x, bbox.max.y, bbox.max.z)),
    mul(M, Vec3f(bbox.max.x, bbox.min.y, bbox.min.z)),
    mul(M, Vec3f(bbox.max.x, bbox.min.y, bbox.max.z)),
    mul(M, Vec3f(bbox.max.x, bbox.max.y, bbox.min.z)),
    mul(M, Vec3f(bbox.max.x, bbox.max.y, bbox.max.z))
  };
  return BBox3f(min(min(min(p[0], p[1]), min(p[2], p[3])), min(min(p[4], p[5]), min(p[6], p[7]))),
                max(max(max(p[0], p[1]), max(p[2], p[3])), max(max(p[4], p[5]), max(p[6], p[7]))));
}*/
